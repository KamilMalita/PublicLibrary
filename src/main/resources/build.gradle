import java.time.LocalDateTime

task generateAuthorsAndBooks() {
    doLast {
        File dataSql = file("data.sql")
        dataSql.write("")
        //Authors
        for (int i = 1; i <= 100; ++i) {
            dataSql.append("INSERT INTO AUTHOR (id, name, surname, description, born_date) values(${i}, 'Author name: ${i}','Author surname: ${i}','Author description: ${i}','"
                    + LocalDateTime.now().minusDays(1000 - i) + "');\n")
        }
        //Books
        for (int i = 1; i <= 100; ++i) {
            int author_id = i / 10 + 1;
            dataSql.append("INSERT INTO BOOK (id, author_id, title, description, release_date) values(${i},${author_id}, 'Book title: ${i}','Book description: ${i}','"
                    + LocalDateTime.now().minusDays(1000 - i) + "');\n")
        }
        //Address
        for (int i = 1; i <= 100; ++i) {
            int postalCode = i / 10;
            dataSql.append("INSERT INTO ADDRESS (id, town, street, postal_code) values(${i},'Town Name: ${i}', 'Street name: ${i}','Postal Code: ${postalCode}${postalCode}-${postalCode}${postalCode}${postalCode}');\n")
        }
        //Library
        for (int i = 1; i <= 100; ++i) {
            int address_id = i / 10 + 1;
            dataSql.append("INSERT INTO LIBRARY (id, address_id, library_name, library_details) values(${i},${address_id}, 'Library name: ${i}','Library details: ${i}');\n")
        }
    }
}